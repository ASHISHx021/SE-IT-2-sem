#include<iostream>
#include<GL/glut.h>
using namespace std;
int a,b,c,d,n;
int x[15],y[15];
int m[10],xx[15],yy[15];
int xmin,ymin,xmax,ymax;
 void init()
{
 glClearColor(0,0,0,0);
 gluOrtho2D(-320,320,-240,240);
 }
 void drawsquare(int a,int b,int c,int d)
 {
   glBegin(GL_LINE_LOOP);
    glVertex2i(xmin,ymin);
    glVertex2i(xmax,ymin);
    glVertex2i(xmin,ymax);
    glVertex2i(xmax,ymax);
    glEnd();
  }
  void drawpolygon()
  {
   glBegin(GL_POLYGON);
   glVertex2i(x[0],y[0]);
   glVertex2i(x[1],y[1]);
   glVertex2i(x[2],y[2]);
   glEnd();
  }
   
    
void getdata()
{
 cout<<"Enter the number of vertices"<<endl;
 cin>>n;
 cout<<"enter co-ordinates for window"<<endl;
 cin>>xmin>>ymin>>endl;
 cin>>xmax>>ymax>>endl;
}
 void slop()
{

  if(x[i+1]-x[i]!=0)
  {
    m[i]=(y[i+1]-y[i])/(x[i+1]-x[i]);
   }
  else
  cout<<"you cannot calculate the slope"<<endl;
}
void lclip()
{
  int k=0; 
  slop();
  for(int i=0;i<n;i++)
  {
  if(x[i]>xmin && x[i]>ymin)
  {
   xx[k]=x[i+1];
   yy[k]=y[i+1];
   k++;
   }
   else if(x[i]>xmin  &&x[i+1]<xmin)
   {
   xx[k]=xmin;
   yy[k]=y[i]+m[i]*(xmin-x[i]);
   k++;
   }
   else(x[i]<xmin  &&x[i+1]>xmin)
   {
    xx[k]=xmin;
    yy[k]=yy[k]=y[i]+m[i]*(xmin-x[i]);
    k++;
    xx[k]=x[i+1];
    yy[k]=y[i+1];
    }
   }
 }
 void rclip()
{
  int k=0; 
  for(i=0;i<n;i++)
  {
  if(x[i]>xmax && x[i+1]>xmax)
  {
   xx[k]=x[i+1];
   yy[k]=y[i+1];
   k++;
   }
   else if(x[i]>xmax  && x[i+1]<xmax)
   {
   xx[k]=xmax;
   yy[k]=y[i]+m[i]*(xmax-x[i]);
   k++;
   }
   else(x[i]<xmin  &&x[i+1]>xmax)
   {
    xx[k]=xmax;
    yy[k]=yy[k]=y[i]+m[i]*(xmax-x[i]);
    k++;
    xx[k]=x[i+1];
    yy[k]=y[i+1];
    }
   }
 }
 void tclip()
 {
   int k=0;
   if(y[i]>ymax && y[i+1]>ymax)
   {
   xx[k]=x[i+1];
   yy[k]=y[i+1];
   }
   else if(y[i]>
 
  }
     
 void display()
 {
    glClear(GL_COLOR_BUFFER_BIT);
    drawsquare(a,b,c,d);
    drawpolygon();
    glEnd();
    glFlush();
 }
 int main(int argc,char **argv)
 {
   cout<<"Enter lower left co-irdinates"<<endl;
   cout<<"Enter x-min co-irdinate"<<endl;
   cin>>xmin;
   cout<<"Enter y-min co-irdinate"<<endl;
   cin>>ymin;
   cout<<"Enter upper right co-irdinate"<<endl;
   cout<<"Enter x-max co-irdinates"<<endl;
   cin>>x[i];
   cout<<"Enter y-max co-irdinate"<<endl;
   cin>>y[i];
   cout<<"for polygon";
   cout<<"Enter the number of edges"<<endl;
   cin>>n;
   if(n<=2)
    cout<<" Error occur in drawing polygon"<<endl;
    exit(0);
   else
   {
     int i;
     for(i=0;i<=n;i++)
     {
     cout<<"Enter the"<<i+1<<"verices"<<endl;
     cout<<"Enter x co-irdinate"<<endl;
     cin>>x;
     cout<<"Enter y co-irdinate"<<endl;
     cin>>y;
     }
   }
   glutInit(&argc,argv);
   glutInitWindowSize(640,480);
   glutInitWindowPosition(100,100);
   glutCreateWindow("Sample Program");
   init();
   glutDisplayFunc(display);
   glutMainLoop();
   return 0;
}











